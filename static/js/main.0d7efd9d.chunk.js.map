{"version":3,"sources":["components/SearchSection/Heading/Heading.js","components/SearchSection/SearchForm/FormInput/FormInput.js","components/SearchSection/SearchForm/FormRadio/RadioButton/RadioButton.js","components/SearchSection/SearchForm/FormRadio/FormRadio.js","components/SearchSection/SearchForm/FormButton/FormButton.js","components/SearchSection/SearchForm/SearchForm.js","components/SearchSection/SearchSection.js","components/ResultsSection/ResultsList/ListItem/ListItem.js","components/ResultsSection/ResultsList/ResultsList.js","components/ResultsSection/ResultsSection.js","components/DataSection/DataList/DataListItem/DataListItem.js","components/DataSection/DataList/DataList.js","components/DataSection/DataSection.js","components/Modal/ModalText.js","components/Modal/Modal.js","App.js","index.tsx"],"names":["Wrapper","styled","div","Star","h1","Wars","Library","h2","Heading","TransitionGroup","component","appear","in","CSSTransition","classNames","timeout","Input","input","FormInput","props","type","placeholder","id","autoComplete","onChange","handleValue","onMouseEnter","event","target","focus","value","Radio","Label","label","RadioButton","name","defaultChecked","checked","htmlFor","onClick","handleOption","FormRadio","Button","button","FormButton","Form","form","h3","SearchForm","useState","setValue","option","setOption","handleSubmit","a","preventDefault","setResponseStatus","triggerModal","url","fetch","response","status","setSelectedItem","showResults","showItem","json","result","data","results","setResponse","length","onSubmit","SearchSection","Item","li","ListItem","item","selectItem","List","ul","ResultsList","items","map","list","document","querySelectorAll","Object","values","ResultsSection","transition","Name","span","Value","DataListItem","property","DataList","entries","key","Array","isArray","includes","defineProperty","replace","getOwnPropertyDescriptor","DataSection","p","ErrorWrapper","Again","Text","Overlay","Modal","App","undefined","responseStatus","selectedItem","showModal","setShowModal","setShowResults","setShowItem","boolean","clear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d7efd9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  & > * {\r\n    font-family: \"Star Jedi\", sans-serif;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    margin-bottom: 15px;\r\n  }\r\n`\r\nconst Star = styled.h1`\r\n  line-height: 0.7;\r\n  font-size: 180px;\r\n  transform-style: preserve-3d;\r\n  transform: perspective(8cm) rotateX(40deg) rotateY(0);\r\n\r\n  @media all and (min-width: 2000px) {\r\n    line-height: 0.75;\r\n    font-size: 8vw;\r\n  }\r\n\r\n  @media all and (max-width: 1440px) {\r\n    line-height: 6.4vw;\r\n    font-size: 9.5vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    margin-right: 0.8vw;\r\n    line-height: 1;\r\n  }\r\n`\r\nconst Wars = styled(Star)`\r\n  line-height: 0.35;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    margin-right: 18px;\r\n    line-height: 1;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    margin-right: 10px;\r\n  }\r\n`\r\nconst Library = styled.h2`\r\n  font-size: 40px;\r\n  letter-spacing: 8px;\r\n  color: var(--white);\r\n\r\n  @media all and (max-width: 1440px) {\r\n    font-size: 1.8vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    order: 1;\r\n    font-size: 3.8vw;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    line-height: 1.6;\r\n    letter-spacing: 5px;\r\n  }\r\n`\r\n\r\nexport const Heading = () => {\r\n  return(\r\n    <TransitionGroup component={null} appear in>\r\n      {true && (\r\n        <CSSTransition classNames=\"heading\" timeout={1000} >\r\n          <Wrapper>\r\n            <Star>star</Star>\r\n            <Library>library</Library>\r\n            <Wars>wars</Wars>\r\n          </Wrapper>\r\n        </CSSTransition>\r\n      )}\r\n    </TransitionGroup>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 25px;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    padding: 0;\r\n  }\r\n`\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  border: 2px solid var(--white);\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  color: var(--white);\r\n  background-color: transparent;\r\n  transition: 0.3s;\r\n\r\n  &::placeholder {\r\n    font-family: 'Open sans', serif;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    transition: 0.3s;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: var(--white);\r\n    outline: none;\r\n    box-shadow: 0 0 10px white;\r\n  }\r\n\r\n  &:focus&::placeholder {\r\n    color: var(--white);\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px white;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    margin-bottom: 15px;\r\n    padding: 7px;\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nexport const FormInput = (props) => {\r\n\r\n  return(\r\n    <Wrapper>\r\n      <Input\r\n      type=\"text\"\r\n      placeholder=\"e. g. Skywalker\"\r\n      id=\"inputSearch\"\r\n      autoComplete=\"off\"\r\n      onChange={props.handleValue}\r\n      onMouseEnter={(event) => {event.target.focus()}}\r\n      value={props.value}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Radio = styled.input`\r\n  display: none;\r\n\r\n  &:checked ~ * {\r\n    color: var(--white);\r\n    text-decoration: underline;\r\n  }\r\n`\r\nconst Label = styled.label`\r\n  font-size: 24px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: var(--white);\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:focus {\r\n    color: var(--white);\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media all and (max-width: 1440px) {\r\n    font-size: 1.6vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    font-size: 2.5vw;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport const RadioButton = (props) => {\r\n  return(\r\n    <div>\r\n\r\n      <Radio type='radio' \r\n             name='option' \r\n             id={props.value}\r\n             defaultChecked={props.checked}/>\r\n\r\n      <Label htmlFor={props.value} onClick={() => {props.handleOption(props.value)}}>\r\n        {props.value}\r\n      </Label>\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { RadioButton } from './RadioButton/RadioButton';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 0 120px;\r\n  margin-bottom: 30px;\r\n\r\n  @media all and (max-width: 1440px) {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    padding: 0 75px;\r\n    margin-bottom: 1.2vw;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 0 25px;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nexport const FormRadio = (props) => {\r\n  return(\r\n    <Wrapper>\r\n      <RadioButton value='people' handleOption={props.handleOption} checked/>\r\n      <RadioButton value='planets' handleOption={props.handleOption}/>\r\n      <RadioButton value='starships' handleOption={props.handleOption}/>\r\n    </Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 25px;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  border: 2px solid rgba(255,232,31, 0.2);\r\n  padding: 2px;\r\n  font-family: \"Star Jedi\";\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  color: var(--black);\r\n  background-color: rgba(255,232,31, 0.8);\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 10px rgba(255,232,31, 0.6);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--yellow);\r\n    box-shadow: 0 0 10px rgba(255,232,31, 0.6);\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    width: 200px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    width: 160px;\r\n    padding: 0;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nexport const FormButton = () => {\r\n  return(\r\n    <Wrapper>\r\n      <Button type='submit'>\r\n        Find\r\n      </Button>\r\n    </Wrapper>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { FormInput } from './FormInput/FormInput';\r\nimport { FormRadio } from './FormRadio/FormRadio';\r\nimport { FormButton } from './FormButton/FormButton';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nconst Heading = styled.h3`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  word-spacing: 3px;\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 2.3vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    margin-bottom: 2vw;\r\n    font-size: 3vw;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nexport const SearchForm = (props) => {\r\n  const [value, setValue] = useState('')\r\n  const [option, setOption] = useState('people')\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (value === '') {\r\n      props.setResponseStatus('empty');\r\n      props.triggerModal();\r\n    }\r\n    else {\r\n      let url = `https://swapi.dev/api/${option}/?search=${value}`;\r\n      let response = await fetch(url);\r\n      if (response.status !== 200) {\r\n        props.setResponseStatus(response.status);\r\n        props.triggerModal();\r\n        props.setSelectedItem([]);\r\n        props.showResults(false);\r\n        props.showItem(false);\r\n      }\r\n      else {\r\n        let result   = await response.json();\r\n        const data   = result.results;\r\n      \r\n        props.setResponse(data);\r\n        props.setResponseStatus(response.status);\r\n        props.showResults(true);\r\n\r\n        if (response.status === 200 && data.length === 0) {\r\n          props.setResponseStatus('notFound')\r\n          props.triggerModal();\r\n          props.setSelectedItem([]);\r\n          props.showResults(false);\r\n          props.showItem(false);\r\n        }\r\n      }\r\n    }\r\n    setValue('');\r\n  }\r\n\r\n  return (\r\n    <TransitionGroup component={null} appear in>\r\n      {true && (\r\n        <CSSTransition classNames=\"form\" timeout={1000} >\r\n          <Form onSubmit={handleSubmit}>\r\n            <Heading>\r\n              what would you like to find?\r\n            </Heading>\r\n            <FormRadio handleOption={(option) => {setOption(option)}}/>\r\n            <FormInput \r\n              handleValue={(event) => {setValue(event.target.value)}}\r\n              value={value}\r\n            />\r\n            <FormButton />\r\n          </Form>\r\n        </CSSTransition>\r\n      )}\r\n  </TransitionGroup>\r\n  )\r\n}","import React from 'react';\r\nimport { Heading } from './Heading/Heading';\r\nimport { SearchForm } from './SearchForm/SearchForm';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 38%;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    grid-column: 1 / 3;\r\n    grid-row: 1 / 2;\r\n    justify-content: start;\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n    padding: 0 25px; \r\n  }\r\n  \r\n  @media all and (max-width: 425px) {\r\n    padding: 0 10px;\r\n  }\r\n`\r\n\r\nexport const SearchSection = (props) => {\r\n  return(\r\n    <Wrapper>\r\n      <Heading />\r\n        <SearchForm \r\n          setResponse={props.setResponse}\r\n          setResponseStatus={props.setResponseStatus}\r\n          setSelectedItem={props.setSelectedItem}\r\n          triggerModal={props.triggerModal}\r\n          showResults={props.showResults}\r\n          showItem={props.showItem}/>\r\n    </Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.li`\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 18px;\r\n    }\r\n  }\r\n`\r\nconst Label = styled.label`\r\n  display: block;\r\n  padding: 10px 0;\r\n  border: 1px solid var(--yellow);\r\n  text-align: center;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    border-color: var(--white);\r\n    color: var(--white);\r\n  }\r\n\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 1.6vw;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 4px 6px;\r\n  }\r\n`\r\nconst Radio = styled.input`\r\n  display: none;\r\n\r\n  &:checked ~ * {\r\n    outline: none;\r\n    border-color: var(--white);\r\n    border-radius: none;\r\n    background-color: var(--white);\r\n    color: var(--black);\r\n  }\r\n`\r\n\r\nexport const ListItem = (props) => {\r\n  return(\r\n    <Item>\r\n      <Radio \r\n        type=\"radio\" \r\n        name='item'\r\n        id={props.item.name}\r\n      />\r\n\r\n      <Label \r\n        htmlFor={props.item.name}\r\n        onClick={ () => {\r\n          props.selectItem(props.item);\r\n          props.showItem(true);\r\n      }}>\r\n          \r\n          {props.item.name}\r\n\r\n      </Label>\r\n    </Item>\r\n  )\r\n}","/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\nimport { ListItem } from './ListItem/ListItem';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 100%;\r\n  padding: 0 50px;\r\n\r\n  @media all and (max-width: 1440px) {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    height: auto;\r\n    padding: 0 12.5px 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 0 5px 0 10px;\r\n  }\r\n`\r\n\r\nexport const ResultsList = (props) => {\r\n\r\n  const items = props.items.map((item) => \r\n    <ListItem key={item.name}\r\n              item={item}\r\n              selectItem={props.selectItem}\r\n              showItem={props.showItem}\r\n    />\r\n  )\r\n\r\n  // remove checked attribute \r\n  const list = document.querySelectorAll('input[name=item]')\r\n  Object.values(list).map((item) => {\r\n    if (item.checked) item.checked = false\r\n  })\r\n\r\n  return (\r\n    <List>\r\n      {items}\r\n    </List>\r\n  )\r\n}","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { ResultsList } from './ResultsList/ResultsList';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 31%;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    grid-column: 1 / 2;\r\n    grid-row: 2 / 3;\r\n    width: 100%;\r\n    heigh: 100vh;\r\n  }\r\n`\r\n\r\nexport const ResultsSection = (props) => {\r\n  return (\r\n    <Wrapper>\r\n        <TransitionGroup component={null}>\r\n          {props.transition && (\r\n            <CSSTransition classNames=\"results\" timeout={500}>\r\n              <ResultsList items={props.items} selectItem={props.selectItem} showItem={props.showItem}/>\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n    </Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  padding: 8px;\r\n  border: 1px solid var(--white);\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 18px;\r\n  }\r\n\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 1.4vw;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 4px 6px;\r\n  }\r\n`\r\nconst Name = styled.span`\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 1.6vw;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\nconst Value = styled(Name)`\r\n  color: var(--white)\r\n`\r\n\r\nexport const DataListItem = (props) => {\r\n  return(\r\n    <ListItem>\r\n      <Name>{props.property}</Name>: <Value>{props.value}</Value>\r\n    </ListItem>\r\n  )\r\n}","import React from 'react';\r\nimport { DataListItem } from './DataListItem/DataListItem';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  width: 100%;\r\n  padding: 0 50px;\r\n\r\n  @media all and (max-width: 1440px) {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    height: auto;\r\n    padding: 0 25px 0 12.5px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 0 10px 0 5px;\r\n  }\r\n`\r\n\r\nexport const DataList = (props) => {\r\n  const item = props.item;\r\n\r\n  const configureItem = () => {\r\n    // throw and rename specific keys\r\n    // eslint-disable-next-line array-callback-return\r\n    Object.entries(item).map(([key, value]) => {\r\n      if (value === '') return delete item[key];\r\n      if (key === 'url' || key ===  'created' || key ===  'edited' || key ===  'homeworld') return delete item[key];\r\n      if (Array.isArray(value)) return delete item[key];\r\n      \r\n      if (key.includes('_')) {\r\n        Object.defineProperty(item, key.replace('_', ' '),\r\n            Object.getOwnPropertyDescriptor(item, key));\r\n        delete item[key];\r\n      }\r\n    })\r\n  }\r\n\r\n  configureItem();\r\n\r\n  const items = Object.entries(item).map(([key, value]) => {\r\n      return (\r\n        <DataListItem key={key} property={key} value={value} />\r\n      )\r\n  });\r\n\r\n  return(\r\n    <List>\r\n      {items}\r\n    </List>\r\n  )\r\n}","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { DataList } from './DataList/DataList';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 31%;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    grid-column: 2 / 3;\r\n    grid-row: 2 / 3;\r\n    width: 100%;\r\n    align-items: start;\r\n  }\r\n`\r\n\r\nexport const DataSection = (props) => {\r\n  return(\r\n    <Wrapper>\r\n      <TransitionGroup component={null}>\r\n        {props.transition && (\r\n          <CSSTransition classNames=\"data\" timeout={500}>\r\n            {<DataList item={props.item}/>}\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    </Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.p`\r\n  margin-bottom: 25px;\r\n  color: var(--black);\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  word-spacing: 3px;\r\n\r\n  @media all and (max-width: 767px) {\r\n    font-size: 20px;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst ErrorWrapper = styled.p`\r\n  text-align: center;\r\n\r\n  & p {\r\n    color: var(--black);\r\n    font-size: 26px;\r\n    font-weight: bold;\r\n    word-spacing: 3px;\r\n  }\r\n`\r\n\r\nconst Again = styled(Wrapper)`\r\n  margin-bottom: 0;\r\n  font-family: 'Star Jedi';\r\n  font-size: 30px !important;\r\n  line-height: 1;\r\n`\r\n\r\nexport const Text = (props) => {\r\n  const chooseText = () => {\r\n    if (typeof props.status !== 'string') \r\n    return (\r\n      <ErrorWrapper>\r\n        <p>Something went wrong.</p>\r\n        <Again>Try again</Again>\r\n      </ErrorWrapper>\r\n    )\r\n    else {\r\n      if (props.status === 'empty') return 'Input field should not be empty'\r\n      if (props.status === 'notFound') return 'Nothing Found';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>{chooseText()}</Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Text } from './ModalText';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  z-index: 9;\r\n`\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 30px 100px;\r\n  background-color: var(--yellow);\r\n  overflow: hidden;\r\n\r\n  @media all and (max-width: 767px) {\r\n    width: 90%;\r\n    height: auto;\r\n    padding: 30px 25px;\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 35px;\r\n  border: 1px solid var(--black);\r\n  font-family: 'Star Jedi';\r\n  letter-spacing: 4px;\r\n  background-color: var(--black);\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    color: var(--black);\r\n    background-color: var(--white);\r\n    box-shadow: 0 0 7px 0 var(--black);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const Modal = (props) => {\r\n  return(\r\n    <Overlay>\r\n      <Wrapper>\r\n        <Text status={props.status}/>\r\n        <Button onClick={props.triggerModal}>\r\n          close\r\n        </Button>\r\n      </Wrapper>\r\n    </Overlay>\r\n  )\r\n}","import React, { useState } from 'react';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { SearchSection } from './components/SearchSection/SearchSection';\nimport { ResultsSection } from './components/ResultsSection/ResultsSection';\nimport { DataSection } from './components/DataSection/DataSection';\nimport { Modal } from './components/Modal/Modal';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: auto;\n  min-height: 100vh;\n  padding: 25px 0;\n\n  @media all and (max-width: 1440px) {\n    padding: 25px 0;\n  }\n\n  @media all and (max-width: 1024px) {\n    display: grid;\n    grid-template-columns: 50% 50%;\n    grid-template-rows: auto auto;\n    height: unset;\n    min-height: unset;\n  }\n\n  @media all and (max-width: 425px) {\n    padding: 10px 0;\n  }\n`\n\nexport const App = () => {\n  const [response, setResponse] = useState([]);\n  const [responseStatus, setResponseStatus] = useState(undefined)\n  const [selectedItem, setSelectedItem] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [showItem, setShowItem] = useState(false);\n\n  return(\n    <Wrapper>\n\n      <TransitionGroup component={null}>\n        {showModal && (\n          <CSSTransition classNames=\"modal\" timeout={400}>\n            <Modal status={responseStatus} triggerModal={() => {setShowModal(!showModal)}}/> \n          </CSSTransition>\n        )}\n      </TransitionGroup>\n\n      <ResultsSection \n        items={response}\n        selectItem={(item) => {setSelectedItem(item)}}\n        showItem={(boolean) => {setShowItem(boolean)}}\n        transition={showResults}\n      />\n\n      <SearchSection \n        setResponse={(data) => {setResponse(data)}}\n        setResponseStatus={(status) => {setResponseStatus(status)}}\n        setSelectedItem={(clear) => {setSelectedItem(clear)}}\n        triggerModal={() => {setShowModal(!showModal)}}\n        showResults={(boolean) => setShowResults(boolean)}\n        showItem={(boolean) => setShowItem(boolean)}\n      />\n\n      <DataSection\n        item={selectedItem}\n        transition={showItem}\n      />\n\n    </Wrapper>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\nimport './animations.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}