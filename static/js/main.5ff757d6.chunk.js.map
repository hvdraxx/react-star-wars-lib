{"version":3,"sources":["components/Search/Heading/heading.styled.ts","components/Search/Heading/Heading.tsx","components/Search/SearchForm/FormInput/formInput.styled.ts","components/Search/SearchForm/FormInput/FormInput.tsx","components/Search/SearchForm/FormRadio/RadioButton/radioButton.styled.ts","components/Search/SearchForm/FormRadio/RadioButton/RadioButton.tsx","components/Search/SearchForm/FormRadio/formRadio.styled.ts","components/Search/SearchForm/FormRadio/FormRadio.tsx","components/Search/SearchForm/FormButton/formButton.styled.ts","components/Search/SearchForm/FormButton/FormButton.tsx","redux/types.ts","utils/getResponse.ts","components/Search/SearchForm/searchForm.styled.ts","components/Search/SearchForm/SearchForm.tsx","redux/actions/dataActions.ts","redux/actions/appActions.ts","components/Search/search.styled.ts","components/Search/Search.tsx","components/Results/ResultsList/ResultsItem/resultsListItem.styled.ts","components/Results/ResultsList/ResultsItem/ResultsItem.tsx","components/Results/ResultsList/resultsList.styled.ts","components/Results/ResultsList/ResultsList.tsx","components/Loader/loader.styled.ts","components/Loader/Loader.tsx","components/Results/results.styled.ts","components/Results/Results.tsx","components/Info/InfoList/InfoListItem/infoListItem.styled.ts","components/Info/InfoList/InfoListItem/InfoListItem.tsx","components/Info/InfoList/infoList.styled.ts","components/Info/InfoList/InfoList.tsx","components/Info/info.styled.ts","components/Info/Info.tsx","components/Modal/modal.styled.ts","components/Modal/Modal.tsx","app.styled.ts","App.tsx","redux/reducers/appReducer.ts","redux/reducers/dataReducer.ts","redux/reducers/rootReducer.ts","redux/store.ts","styles/GlobalStyles.ts","index.tsx"],"names":["Wrapper","styled","div","Star","h1","Wars","Library","h2","Heading","TransitionGroup","component","appear","in","CSSTransition","classNames","timeout","Input","input","FormInput","handleValue","value","type","placeholder","id","autoComplete","onChange","event","target","Radio","Label","label","RadioButton","checked","handleOption","name","defaultChecked","htmlFor","onClick","FormRadio","Button","button","connect","state","loading","app","isLoading","disabled","SET_RESPONSE","CHOOSE_ITEM","RESET_STATE","TOGGLE_LOADING","SHOW_ERROR","HIDE_ERROR","getResponse","option","a","url","fetch","response","ok","json","result","data","results","filterItems","status","Promise","all","map","item","forEach","prop","homeworld","length","substring","Array","isArray","films","filmURL","title","join","starships","starshipURL","vehicles","vehicleURL","Object","entries","key","includes","defineProperty","replace","getOwnPropertyDescriptor","filteredData","Form","form","h3","mapDispatchToProps","setResponse","payload","resetDataState","choosedItem","showError","message","toggleLoading","useState","setOption","setValue","handleSubmit","preventDefault","trim","onSubmit","Search","Item","li","chooseItem","List","ul","items","list","document","querySelectorAll","values","Container","outerRing","keyframes","innerRing","LoaderStyled","Loader","section","Results","ListItem","Name","span","Value","InfoListItem","property","Info","Overlay","TextWrapper","p","error","responseError","hideError","text","show","initialState","rootReducer","combineReducers","action","createStore","composeWithDevTools","GlobalStyles","createGlobalStyle","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.5ff757d6.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  & > * {\r\n    font-family: \"Star Jedi\", sans-serif;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    display: flex;\r\n    align-items: flex-end;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    margin-bottom: 15px;\r\n  }\r\n`\r\nexport const Star = styled.h1`\r\n  line-height: 0.7;\r\n  font-size: 180px;\r\n  transform-style: preserve-3d;\r\n  transform: perspective(8cm) rotateX(40deg) rotateY(0);\r\n\r\n  @media all and (min-width: 2000px) {\r\n    line-height: 0.75;\r\n    font-size: 8vw;\r\n  }\r\n\r\n  @media all and (max-width: 1440px) {\r\n    line-height: 6.4vw;\r\n    font-size: 9.5vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    margin-right: 0.8vw;\r\n    line-height: 1;\r\n  }\r\n`\r\nexport const Wars = styled(Star)`\r\n  line-height: 0.35;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    margin-right: 18px;\r\n    line-height: 1;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    margin-right: 10px;\r\n  }\r\n`\r\nexport const Library = styled.h2`\r\n  font-size: 40px;\r\n  letter-spacing: 8px;\r\n  color: var(--white);\r\n\r\n  @media all and (max-width: 1440px) {\r\n    font-size: 1.8vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    order: 1;\r\n    font-size: 3.8vw;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    line-height: 1.6;\r\n    letter-spacing: 5px;\r\n  }\r\n`","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { Wrapper, Star, Wars, Library } from './heading.styled';\r\n\r\nexport const Heading = () => {\r\n  return(\r\n    <TransitionGroup component={null} appear in>\r\n      {true && (\r\n        <CSSTransition classNames=\"heading\" timeout={1000} >\r\n          <Wrapper>\r\n            <Star>star</Star>\r\n            <Library>library</Library>\r\n            <Wars>wars</Wars>\r\n          </Wrapper>\r\n        </CSSTransition>\r\n      )}\r\n    </TransitionGroup>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 25px;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    padding: 0;\r\n  }\r\n`\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  border: 2px solid var(--white);\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  color: var(--white);\r\n  background-color: transparent;\r\n  transition: 0.3s;\r\n\r\n  &::placeholder {\r\n    font-family: 'Open sans', serif;\r\n    color: rgba(255, 255, 255, 0.6);\r\n    transition: 0.3s;\r\n  }\r\n\r\n  &:focus {\r\n    border-color: var(--white);\r\n    outline: none;\r\n    box-shadow: 0 0 10px white;\r\n  }\r\n\r\n  &:focus&::placeholder {\r\n    color: var(--white);\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px white;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    margin-bottom: 15px;\r\n    padding: 7px;\r\n    font-size: 16px;\r\n  }\r\n`","import React from 'react'\r\nimport { FormInputProps } from '../../../../types/search.types'\r\nimport { Input, Wrapper } from './formInput.styled'\r\n\r\nexport const FormInput = ({handleValue, value}: FormInputProps) => {\r\n\r\n  const valueHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    handleValue(event.target.value)\r\n  }\r\n\r\n  return(\r\n    <Wrapper>\r\n      <Input\r\n      type=\"text\"\r\n      placeholder=\"e. g. Skywalker\"\r\n      id=\"inputSearch\"\r\n      autoComplete=\"off\"\r\n      onChange={valueHandler}\r\n      value={value}\r\n      />\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Radio = styled.input`\r\n  display: none;\r\n\r\n  &:checked ~ * {\r\n    color: var(--white);\r\n    text-decoration: underline;\r\n  }\r\n`\r\nexport const Label = styled.label`\r\n  font-size: 24px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: var(--white);\r\n    text-decoration: underline;\r\n  }\r\n\r\n  &:focus {\r\n    color: var(--white);\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media all and (max-width: 1440px) {\r\n    font-size: 1.6vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    font-size: 2.5vw;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    font-size: 14px;\r\n  }\r\n`","import React from 'react'\r\nimport { FormRadioButtonProps } from '../../../../../types/search.types'\r\nimport { Radio, Label } from './radioButton.styled'\r\n\r\nexport const RadioButton = ({value, checked, handleOption}: FormRadioButtonProps) => {\r\n  return(\r\n    <div>\r\n      <Radio type='radio' \r\n             name='option' \r\n             id={value}\r\n             defaultChecked={checked}\r\n      />\r\n\r\n      <Label htmlFor={value} onClick={() => {handleOption(value)}}>\r\n        {value}\r\n      </Label>\r\n    </div>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 0 120px;\r\n  margin-bottom: 30px;\r\n\r\n  @media all and (max-width: 1440px) {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    padding: 0 75px;\r\n    margin-bottom: 1.2vw;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 0 25px;\r\n    margin-bottom: 8px;\r\n  }\r\n`","import React from 'react'\r\nimport { RadioButton } from './RadioButton/RadioButton'\r\nimport { FormRadioProps } from '../../../../types/search.types'\r\nimport { Wrapper } from './formRadio.styled'\r\n\r\nexport const FormRadio = ({handleOption}: FormRadioProps) => {\r\n  return(\r\n    <Wrapper>\r\n      <RadioButton value='people'    handleOption={handleOption} checked/>\r\n      <RadioButton value='planets'   handleOption={handleOption}/>\r\n      <RadioButton value='starships' handleOption={handleOption}/>\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 25px;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  border: 2px solid rgba(255,232,31, 0.2);\r\n  padding: 2px;\r\n  font-family: \"Star Jedi\";\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  color: var(--black);\r\n  background-color: rgba(255,232,31, 0.9);\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 10px rgba(255,232,31, 0.6);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--yellow);\r\n    box-shadow: 0 0 10px rgba(255,232,31, 0.6);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: rgba(255,232,31, 0.6);\r\n    box-shadow: none;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    width: 200px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    width: 160px;\r\n    padding: 0;\r\n    font-size: 18px;\r\n  }\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ImapAppStateToProps } from '../../../../types/redux.types'\r\nimport { FormButtonProps } from '../../../../types/search.types'\r\nimport { Button, Wrapper } from './formButton.styled'\r\n\r\nconst FormButton = ({loading}: FormButtonProps) => {\r\n  return(\r\n    <Wrapper>\r\n      <Button type='submit' disabled={loading ? true : false}>\r\n        Find\r\n      </Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: ImapAppStateToProps) => {\r\n  return {\r\n    loading: state.app.isLoading\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(FormButton)","export const SET_RESPONSE    = 'DATA/SET_RESPONSE'\r\nexport const CHOOSE_ITEM     = 'DATA/CHOOSE_ITEM'\r\nexport const RESET_STATE     = 'DATA/RESET_STATE'\r\n// = = = = = = = = = = = = = = = = = = = = = = = = //\r\nexport const TOGGLE_LOADING  = 'APP/TOGGLE_LOADING'\r\nexport const SHOW_ERROR      = 'APP/SHOW_ERROR'\r\nexport const HIDE_ERROR      = 'APP/HIDE_ERROR'","import { DataType, ResponseType } from \"../types/common.types\"\r\n\r\nexport const getResponse = async (option: string, value: string): Promise<ResponseType> => {\r\n  let url = `https://swapi.dev/api/${option}/?search=${value}`\r\n  \r\n  let response = await fetch(url)\r\n  if (response.ok) {\r\n    let result = await response.json()\r\n    const data = result.results\r\n    return {\r\n      data: await filterItems(data),\r\n      status: response.status\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      data: [],\r\n      status: response.status,\r\n    }\r\n  }\r\n}\r\n\r\nconst filterItems = async (data: DataType): Promise<DataType> => {\r\n  const filteredData = await Promise.all(data.map(async item => {\r\n\r\n    const propsToDelete = ['url', 'created', 'edited', 'species', 'residents', 'pilots']\r\n    propsToDelete.forEach(prop => {\r\n      delete item[prop]\r\n    });\r\n\r\n    if (typeof item.homeworld === 'string' && item.homeworld.length !== 0) {\r\n      const response = await fetch(`https${item.homeworld.substring(4)}`)\r\n      const result   = await response.json()\r\n      item.homeworld =  result.name\r\n    } \r\n    else {\r\n      delete item['homeworld']\r\n    }\r\n\r\n    if (Array.isArray(item.films) && item.films.length !== 0) {\r\n      item.films = await Promise.all(item.films.map( async filmURL => {\r\n        const response = await fetch(`https${filmURL.substring(4)}`)\r\n        const result   = await response.json()\r\n        return result.title\r\n      }))\r\n      item.films.join(', ')\r\n    }\r\n    else {\r\n      delete item['films']\r\n    }\r\n\r\n    if (Array.isArray(item.starships) && item.starships.length !== 0) {\r\n      item.starships = await Promise.all(item.starships.map( async starshipURL => {\r\n        const response = await fetch(`https${starshipURL.substring(4)}`)\r\n        const result   = await response.json()\r\n        return result.name\r\n      }))\r\n      item.starships.join(', ')\r\n    }\r\n    else {\r\n      delete item['starships']\r\n    }\r\n\r\n    if (Array.isArray(item.vehicles) && item.vehicles.length !== 0) {\r\n      item.vehicles = await Promise.all(item.vehicles.map( async vehicleURL => {\r\n        const response = await fetch(`https${vehicleURL.substring(4)}`)\r\n        const result   = await response.json()\r\n        return result.name\r\n      }))\r\n      item.vehicles.join(', ')\r\n    }\r\n    else {\r\n      delete item['vehicles']\r\n    }\r\n\r\n    Object.entries(item).map(([key]) => {\r\n      if (key.includes('_')) {\r\n        Object.defineProperty(item, key.replace(/_/gi, ' '), Object.getOwnPropertyDescriptor(item, key)!)\r\n        delete item[key]\r\n      }\r\n      return null\r\n    })\r\n\r\n    return item\r\n  }))\r\n  \r\n  return filteredData\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nexport const Heading = styled.h3`\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  word-spacing: 3px;\r\n  letter-spacing: 1px;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 2.3vw;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    margin-bottom: 2vw;\r\n    font-size: 3vw;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    font-size: 13px;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport { FormInput } from './FormInput/FormInput'\r\nimport { FormRadio } from './FormRadio/FormRadio'\r\nimport FormButton from './FormButton/FormButton'\r\nimport { setResponse, resetDataState } from '../../../redux/actions/dataActions'\r\nimport { showError, toggleLoading } from '../../../redux/actions/appActions'\r\nimport { getResponse } from '../../../utils/getResponse'\r\nimport { SearchProps } from '../../../types/search.types'\r\nimport { Form, Heading } from './searchForm.styled'\r\n\r\nconst SearchForm = ({setResponse, resetDataState, showError, toggleLoading}: SearchProps) => {\r\n  const [option, setOption] = useState<string>('people')\r\n  const [value, setValue]   = useState<string>('')\r\n\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (value.trim() === '') {\r\n      showError('empty')\r\n      resetDataState()\r\n      setValue('')\r\n    }\r\n    else {\r\n      toggleLoading()\r\n      resetDataState()\r\n      setValue('')\r\n\r\n      try {\r\n        let response = await getResponse(option, value)\r\n        setResponse(response.data, response.status)\r\n        if (response.data.length === 0 && response.status === 200) {\r\n          showError('notFound')\r\n        }\r\n      }\r\n      catch (e) {\r\n        showError('error')\r\n      }\r\n      \r\n      toggleLoading()\r\n    }\r\n  }\r\n \r\n  return (\r\n    <TransitionGroup component={null} appear in>\r\n      {true && (\r\n        <CSSTransition classNames=\"form\" timeout={1000} >\r\n          <Form onSubmit={handleSubmit}>\r\n            \r\n            <Heading>\r\n              what would you like to find?\r\n            </Heading>\r\n\r\n            <FormRadio handleOption={(option) => {setOption(option)}}/>\r\n            <FormInput handleValue={(value) => {setValue(value)}} value={value}/>\r\n            <FormButton loading/>\r\n\r\n          </Form>\r\n        </CSSTransition>\r\n      )}\r\n  </TransitionGroup>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setResponse,\r\n  resetDataState,\r\n  showError,\r\n  toggleLoading\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchForm)","import { DataType, IDataItem } from '../../types/common.types';\r\nimport { DataActions } from '../../types/redux.types';\r\nimport { SET_RESPONSE, CHOOSE_ITEM, RESET_STATE } from '../types';\r\n\r\nexport const setResponse = (response: DataType, status: number): DataActions => {\r\n  return {\r\n    type: SET_RESPONSE,\r\n    payload: response,\r\n    status: status\r\n  }\r\n}\r\n\r\nexport const chooseItem = (item: IDataItem): DataActions => {\r\n  return {\r\n    type: CHOOSE_ITEM,\r\n    payload: item\r\n  }\r\n}\r\n\r\nexport const resetDataState = (): DataActions => {\r\n  return {\r\n    type: RESET_STATE,\r\n    payload: {\r\n      response: [],\r\n      status: 0,\r\n      choosedItem: {}\r\n    }\r\n  }\r\n}","import { AppActions } from '../../types/redux.types';\r\nimport { TOGGLE_LOADING, SHOW_ERROR, HIDE_ERROR } from './../types';\r\n\r\nexport const toggleLoading = (): AppActions => {\r\n  return {type: TOGGLE_LOADING}\r\n}\r\n\r\nexport const showError = (message: string): AppActions => {\r\n  return {\r\n    type: SHOW_ERROR,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const hideError = (): AppActions => {\r\n  return {type: HIDE_ERROR}\r\n}\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 38%;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    grid-column: 1 / 3;\r\n    grid-row: 1 / 2;\r\n    justify-content: start;\r\n    width: 100%;\r\n    margin-bottom: 25px;\r\n    padding: 0 25px; \r\n  }\r\n  \r\n  @media all and (max-width: 425px) {\r\n    padding: 0 10px;\r\n  }\r\n`","import React from 'react'\r\nimport { Heading } from './Heading/Heading'\r\nimport SearchForm from './SearchForm/SearchForm'\r\nimport { Wrapper } from './search.styled'\r\n\r\nexport const Search = () => {\r\n  return(\r\n    <Wrapper>\r\n      <Heading />\r\n      <SearchForm/>\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child) {\r\n    margin-bottom: 12px;\r\n  }\r\n  @media all and (max-width: 1024px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 12px;\r\n    }\r\n  }\r\n`\r\nexport const Label = styled.label`\r\n  display: block;\r\n  padding: 10px 0;\r\n  border: 1px solid var(--yellow);\r\n  text-align: center;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    border-color: var(--white);\r\n    color: var(--white);\r\n  }\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 1.6vw;\r\n  }\r\n  @media all and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n  @media all and (max-width: 425px) {\r\n    padding: 4px 6px;\r\n  }\r\n`\r\nexport const Radio = styled.input`\r\n  display: none;\r\n  &:checked ~ * {\r\n    outline: none;\r\n    border-color: var(--white);\r\n    border-radius: none;\r\n    background-color: var(--white);\r\n    color: var(--black);\r\n  }\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { chooseItem } from '../../../../redux/actions/dataActions'\r\nimport { ResultsItemProps } from '../../../../types/results.types'\r\nimport { Item, Radio, Label } from './resultsListItem.styled'\r\n\r\nconst ResultsItem = ({item, chooseItem}: ResultsItemProps) => {\r\n  return(\r\n    <Item>\r\n      <Radio \r\n        type=\"radio\"\r\n        name='item'\r\n        id={item.name}\r\n      />\r\n\r\n      <Label \r\n        htmlFor={item.name}\r\n        onClick={() => {chooseItem(item)}}>\r\n          \r\n        {item.name}\r\n\r\n      </Label>\r\n    </Item>\r\n  )\r\n}\r\n\r\nexport default connect(null, { chooseItem })(ResultsItem)","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  height: 100%;\r\n  padding: 0 50px;\r\n\r\n  @media all and (max-width: 1440px) {\r\n    padding: 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 1024px) {\r\n    height: auto;\r\n    padding: 0 12.5px 0 25px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 0 5px 0 10px;\r\n  }\r\n`","import React from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport ResultsItem from './ResultsItem/ResultsItem'\r\nimport { ResultsListProps } from '../../../types/results.types'\r\nimport { ImapDataStateToProps } from '../../../types/redux.types'\r\nimport { List } from './resultsList.styled'\r\n\r\nconst ResultsList = ({items}: ResultsListProps) => {\r\n  // remove checked attribute\r\n  const list: NodeListOf<HTMLInputElement> = document.querySelectorAll('input[name=item]')\r\n  Object.values(list).map((item) => {\r\n    if (item.checked) item.checked = false\r\n    return null\r\n  })\r\n\r\n  return (\r\n      <TransitionGroup component={List} appear>\r\n        {items.map((item) => (\r\n            <CSSTransition\r\n              key={`${item.name}/transition`}\r\n              timeout={600}\r\n              classNames=\"results\"\r\n            >\r\n\r\n              {<ResultsItem key={item.name} item={item}/>}\r\n\r\n            </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: ImapDataStateToProps) => {\r\n  return {\r\n    items: state.data.response\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ResultsList)","import styled, { keyframes } from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst outerRing = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\nconst innerRing = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(-360deg);\r\n  }\r\n`\r\nexport const LoaderStyled = styled.div`\r\n  position: relative;\r\n  width: 120px;\r\n  height: 120px;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    border: 8px solid var(--yellow);\r\n    border-color: var(--yellow) transparent var(--yellow) transparent;\r\n    animation: ${outerRing} 2.5s linear infinite;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 20%;\r\n    left: 20%;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    width: 60%;\r\n    height: 60%;\r\n    border-radius: 50%;\r\n    border: 6px solid var(--yellow);\r\n    border-color: transparent var(--white) transparent var(--white);\r\n    animation: ${innerRing} 1.5s linear infinite;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    width: 80px;\r\n    height: 80px;\r\n\r\n    &::before {\r\n      border-width: 5px\r\n    }\r\n\r\n    &::after {\r\n      border-width: 3px\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Container, LoaderStyled } from './loader.styled'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Container>\r\n      <LoaderStyled/>\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 31%;\r\n\r\n  @media all and (max-width: 1024px) {\r\n    grid-column: 1 / 2;\r\n    grid-row: 2 / 3;\r\n    width: 100%;\r\n    heigh: 100vh;\r\n  }\r\n`","import React from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport ResultsList from './ResultsList/ResultsList'\r\nimport { Loader } from '../Loader/Loader'\r\nimport { ResultsProps } from '../../types/results.types'\r\nimport { Wrapper } from './results.styled'\r\n\r\nexport const Results = ({loading}: ResultsProps) => {\r\n  return (\r\n    <Wrapper>\r\n\r\n      {loading ? \r\n        <TransitionGroup component={null} appear>\r\n          <CSSTransition classNames=\"loader\" timeout={500}>\r\n            <Loader />\r\n          </CSSTransition> \r\n        </TransitionGroup>\r\n      :   \r\n        <ResultsList items={[]}/>}\r\n\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const ListItem = styled.li`\r\n  padding: 8px;\r\n  border: 1px solid var(--white);\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 1.4vw;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media all and (max-width: 425px) {\r\n    padding: 4px 6px;\r\n  }\r\n`\r\nexport const Name = styled.span`\r\n  @media all and (max-width: 1200px) {\r\n    font-size: 1.6vw;\r\n  }\r\n\r\n  @media all and (max-width: 768px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\nexport const Value = styled(Name)`\r\n  color: var(--white)\r\n`","import React from 'react'\r\nimport { InfoListItemProps } from '../../../../types/info.types'\r\nimport { ListItem, Name, Value } from './infoListItem.styled'\r\n\r\nexport const InfoListItem = ({property, value}: InfoListItemProps) => {\r\n  return(\r\n    <ListItem>\r\n      <Name>{property}</Name>: <Value>{value}</Value>\r\n    </ListItem>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\nwidth: 100%;\r\npadding: 0 50px;\r\n\r\n@media all and (max-width: 1440px) {\r\n  padding: 0 25px;\r\n}\r\n\r\n@media all and (max-width: 1024px) {\r\n  height: auto;\r\n  padding: 0 25px 0 12.5px;\r\n}\r\n\r\n@media all and (max-width: 425px) {\r\n  padding: 0 10px 0 5px;\r\n}\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { InfoListItem } from './InfoListItem/InfoListItem'\r\nimport { IDataItem } from '../../../types/common.types'\r\nimport { ImapDataStateToProps } from '../../../types/redux.types'\r\nimport { List } from './infoList.styled'\r\n\r\nconst InfoList = ({item}: IDataItem) => {\r\n  return(\r\n    <TransitionGroup component={List} appear>\r\n      {Object.entries(item).map(([key, value]) => (\r\n          <CSSTransition\r\n            key={`${key}/transition`}\r\n            timeout={600}\r\n            classNames=\"info\"\r\n          >\r\n\r\n            <InfoListItem \r\n              key={key} \r\n              property={key} \r\n              value={Array.isArray(value) ? value.join(', ') : value}\r\n            />\r\n\r\n          </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: ImapDataStateToProps) => {\r\n  return {\r\n    item: state.data.choosedItem\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(InfoList)","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.section`\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nwidth: 31%;\r\n\r\n@media all and (max-width: 1024px) {\r\n  grid-column: 2 / 3;\r\n  grid-row: 2 / 3;\r\n  width: 100%;\r\n  align-items: start;\r\n}\r\n`","import React from 'react'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport InfoList from './InfoList/InfoList'\r\nimport { InfoProps } from '../../types/info.types'\r\nimport { Loader } from '../Loader/Loader'\r\nimport { Wrapper } from './info.styled'\r\n\r\nexport const Info = ({loading}: InfoProps) => {\r\n  return(\r\n    <Wrapper>\r\n\r\n      {loading ? \r\n        <TransitionGroup component={null} appear>\r\n            <CSSTransition classNames=\"loader\" timeout={400}>\r\n              <Loader />\r\n            </CSSTransition> \r\n        </TransitionGroup>\r\n      :\r\n        <InfoList />}\r\n\r\n    </Wrapper>\r\n  )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n  z-index: 9;\r\n`\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 30px 100px;\r\n  background-color: var(--yellow);\r\n  overflow: hidden;\r\n\r\n  @media all and (max-width: 767px) {\r\n    width: 90%;\r\n    height: auto;\r\n    padding: 30px 25px;\r\n  }\r\n`\r\nexport const Button = styled.button`\r\n  padding: 10px 35px;\r\n  border: 1px solid var(--black);\r\n  font-family: 'Star Jedi';\r\n  letter-spacing: 4px;\r\n  background-color: var(--black);\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    color: var(--black);\r\n    background-color: var(--white);\r\n    box-shadow: 0 0 7px 0 var(--black);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\nexport const TextWrapper = styled.p`\r\n  margin-bottom: 25px;\r\n  color: var(--black);\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  word-spacing: 3px;\r\n\r\n  @media all and (max-width: 767px) {\r\n    font-size: 20px;\r\n    text-align: center;\r\n  }\r\n`","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { hideError } from '../../redux/actions/appActions'\r\nimport { IModalProps } from '../../types/modal.types'\r\nimport { ImapAppStateToProps } from '../../types/redux.types'\r\nimport { TextWrapper, Overlay, Wrapper, Button } from './modal.styled'\r\n\r\nconst Modal = ({error, hideError}: IModalProps) => {\r\n  const text = (error: string) => {\r\n    switch(error) {\r\n      case 'empty':\r\n        return (\r\n          <TextWrapper>\r\n            {`Input field should not be empty.`}\r\n          </TextWrapper>\r\n        )\r\n      \r\n      case 'notFound':\r\n        return (\r\n          <TextWrapper>\r\n            {`Nothing found. Try again.`}\r\n          </TextWrapper>\r\n        )\r\n\r\n      case 'error': \r\n        return (\r\n          <TextWrapper>\r\n            {`Something went wrong. Try again.`}\r\n          </TextWrapper>\r\n        )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Overlay>\r\n      <Wrapper>\r\n        {text(error)}\r\n        <Button onClick={() => {hideError()}}>\r\n          close\r\n        </Button>\r\n      </Wrapper>\r\n    </Overlay>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: ImapAppStateToProps) => {\r\n  return {\r\n    error: state.app.responseError.message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { hideError })(Modal)","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.section`\r\ndisplay: flex;\r\nwidth: 100%;\r\nheight: auto;\r\nmin-height: 100vh;\r\npadding: 25px 0;\r\n\r\n@media all and (max-width: 1440px) {\r\n  padding: 25px 0;\r\n}\r\n\r\n@media all and (max-width: 1024px) {\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n  grid-template-rows: auto auto;\r\n  height: unset;\r\n  min-height: unset;\r\n}\r\n\r\n@media all and (max-width: 425px) {\r\n  padding: 10px 0;\r\n}\r\n`","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Search } from './components/Search/Search';\nimport { Results } from './components/Results/Results';\nimport { Info } from './components/Info/Info';\nimport Modal from './components/Modal/Modal';\nimport { AppProps } from './types/app.types';\nimport { ImapAppStateToProps } from './types/redux.types';\nimport { Wrapper } from './app.styled';\n\nconst App = ({show, loading}: AppProps) => {\n  return(\n    <Wrapper>\n      \n      <TransitionGroup component={null}>\n        {show && (\n          <CSSTransition classNames=\"modal\" timeout={400}>\n            <Modal />\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n\n      <Results loading={loading}/> \n      <Search/>\n      <Info loading={loading}/>\n\n    </Wrapper>\n  )\n}\n\nconst mapStateToProps = (state: ImapAppStateToProps) => {\n  return {\n    loading: state.app.isLoading,\n    show: state.app.responseError.show\n  }\n}\n\nexport default connect(mapStateToProps, null)(App)","import { IAppState } from '../../types/redux.types';\r\nimport { HIDE_ERROR, SHOW_ERROR, TOGGLE_LOADING } from '../types';\r\n\r\nconst initialState: IAppState = {\r\n  isLoading: false,\r\n  responseError: {\r\n    show: false,\r\n    message: ''\r\n  }\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: any): IAppState => {\r\n  switch(action.type) {\r\n    case TOGGLE_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: !state.isLoading\r\n      }\r\n    case SHOW_ERROR:\r\n      return {\r\n        ...state,\r\n        responseError: {\r\n          show: true,\r\n          message: action.payload\r\n        }\r\n      }\r\n    case HIDE_ERROR:\r\n      return {\r\n        ...state,\r\n        responseError: {\r\n          show: false,\r\n          message: state.responseError.message\r\n        }\r\n      }\r\n    default: return state\r\n  }\r\n}","import { IDataState } from '../../types/redux.types';\r\nimport { SET_RESPONSE, CHOOSE_ITEM, RESET_STATE } from '../types';\r\n\r\nconst initialState: IDataState = {\r\n  response: [],\r\n  status: 0,\r\n  choosedItem: {}\r\n}\r\n\r\nexport const dataReducer = (state = initialState, action: any): IDataState => {\r\n  switch(action.type) {\r\n    case SET_RESPONSE:\r\n      return { \r\n        ...state,\r\n        response: action.payload,\r\n        status: action.status\r\n      }\r\n    case CHOOSE_ITEM:\r\n      return {\r\n        ...state,\r\n        choosedItem: action.payload\r\n      }\r\n    case RESET_STATE: {\r\n      return {\r\n        ...state,\r\n        response: action.payload.response,\r\n        status: action.payload.status,\r\n        choosedItem: action.payload.choosedItem\r\n      }\r\n    }\r\n    default: return state\r\n  }\r\n}","import { appReducer } from './appReducer';\r\nimport { combineReducers } from \"redux\";\r\nimport { dataReducer } from \"./dataReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  data: dataReducer,\r\n  app: appReducer\r\n})","import { createStore } from 'redux';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore(rootReducer, composeWithDevTools())","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  :root {\r\n  --yellow: #FFE81F;\r\n  --black: #000000;\r\n  --white: #ffffff;\r\n}\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: \"Open Sans\", serif;\r\n    font-size: 18px;\r\n    color: var(--yellow);\r\n  }\r\n\r\n  body {\r\n    background-color: var(--black);\r\n  }\r\n\r\n  ul {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .results-appear {\r\n    opacity: 0.01;\r\n    transform: translate(25px);\r\n  }\r\n\r\n  .results-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 600ms;\r\n  }\r\n\r\n  .results-enter {\r\n    opacity: 0.01;\r\n    transform: translate(25px);\r\n  }\r\n\r\n  .results-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 600ms;\r\n  }\r\n\r\n  .results-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .results-exit-active {\r\n    opacity: 0.01;\r\n    transform: translate(25px);\r\n    transition: all 600ms;\r\n  }\r\n\r\n  .info-enter {\r\n    opacity: 0.01;\r\n    transform: translate(-25px);\r\n  }\r\n\r\n  .info-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 600ms;\r\n  }\r\n\r\n  .info-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .info-exit-active {\r\n    opacity: 0.01;\r\n    transform: translate(-25px);\r\n    transition: all 600ms;\r\n  }\r\n\r\n  .modal-appear {\r\n    opacity: 0.01;\r\n    transform: translateY(-20px);\r\n  }\r\n\r\n  .modal-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 400ms;\r\n  }\r\n\r\n  .modal-enter {\r\n    opacity: 0.01;\r\n    transform: translateY(-50px);\r\n  }\r\n\r\n  .modal-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 400ms;\r\n  }\r\n\r\n  .modal-exit {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  .modal-exit-active {\r\n    opacity: 0.01;\r\n    transform: translateY(50px);\r\n    transition: all 400ms;\r\n  }\r\n\r\n  .loader-appear {\r\n    opacity: 0.01;\r\n    transform: translateY(-40px);\r\n  }\r\n\r\n  .loader-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 400ms;\r\n  }\r\n\r\n  .loader-enter {\r\n    opacity: 0.01;\r\n    transform: translateY(-40px);\r\n  }\r\n\r\n  .loader-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 400ms;\r\n  }\r\n\r\n  .loader-exit {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  .loader-exit-active {\r\n    opacity: 0.01;\r\n    transform: translateY(40px);\r\n    transition: all 400ms;\r\n  }\r\n\r\n  .heading-appear {\r\n    opacity: 0;\r\n    transform: translateY(-150px);\r\n  }\r\n\r\n  .heading-appear-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 1000ms;\r\n  }\r\n\r\n  .form-appear {\r\n    opacity: 0;\r\n    transform: translateY(100px);\r\n  }\r\n\r\n  .form-appear-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 1000ms;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./styles/fonts.css\";\nimport { GlobalStyles } from \"./styles/GlobalStyles\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App show loading />\n    <GlobalStyles />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}